@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="@_registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Username</label>
        <InputText class="form-control" @bind-Value="_registerModel.Username" />
        <ValidationMessage For="@(() => _registerModel.Username)" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText typeof="password" class="form-control" @bind-Value="_registerModel.Password" />
        <ValidationMessage For="@(() => _registerModel.Password)" />
    </div>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <p class="text-danger">@_errorMessage</p>
    }

    <button type="submit" class="btn btn-primary mt-2">Register</button>

</EditForm>

@code {
    private RegisterDto _registerModel = new();
    private string _errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        var success = await AuthService.Register(_registerModel);
        if (success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            _errorMessage = "This user already exists";
        }

    }
}
